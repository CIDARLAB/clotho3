/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ViewEditor.java
 *
 * Created on Oct 4, 2012, 8:40:06 AM
 */
package TempGUI;

import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.clothocad.core.aspects.Collector;
import org.clothocad.core.datums.View;
import org.clothocad.core.datums.objbases.Person;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author jcanderson
 */
public class ViewEditor extends javax.swing.JFrame {

    /** Creates new form ViewEditor */
    public ViewEditor(View view) {
        data = view.toJSON();
        this.viewId = view.getId();
        initComponents();
        update();
    }
    
    public static void newView() {
        View view = (View) Collector.get().getDatum("CT-sample-view");
        JSONObject data = view.toJSON();
        
        try {
            data.put("id", UUID.randomUUID().toString());
            data.put("name", "new name");
            data.put("onUpdateScript", "");
            data.put("graphicsScript", "");
            data.put("name", "");
            data.put("description", "");
            data.put("inputArguments", new JSONArray());
            View newview = View.deserialize(data.toString());
            Collector.get().add(newview);
            new ViewEditor(newview).setVisible(true);
        } catch (Exception ex) {
        }
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        htmlArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        htmlViewer = new javax.swing.JEditorPane();
        save = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        onShow = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        onUpdate = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        inputArgumentsList = new javax.swing.JList();
        token = new javax.swing.JTextField();
        example = new javax.swing.JTextField();
        type = new javax.swing.JTextField();
        permissions = new javax.swing.JTextField();
        setToken = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        uuid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        remove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        htmlArea.setColumns(20);
        htmlArea.setRows(5);
        htmlArea.setText("html script");
        jScrollPane1.setViewportView(htmlArea);

        htmlViewer.setContentType("text/html");
        jScrollPane2.setViewportView(htmlViewer);

        save.setText("save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        onShow.setColumns(20);
        onShow.setRows(5);
        jScrollPane3.setViewportView(onShow);

        onUpdate.setColumns(20);
        onUpdate.setRows(5);
        jScrollPane4.setViewportView(onUpdate);

        jLabel1.setText("onShow");

        jLabel2.setText("onUpdate");

        inputArgumentsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        inputArgumentsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                inputArgumentsListValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(inputArgumentsList);

        token.setText("person");

        example.setText("not_real-person-schema-is-uuid");

        type.setText("SCHEMA");

        permissions.setText("3");

        setToken.setText("set");
        setToken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setTokenActionPerformed(evt);
            }
        });

        jLabel3.setText("name");

        name.setText("View name");

        jLabel4.setText("description");

        description.setColumns(20);
        description.setRows(5);
        jScrollPane6.setViewportView(description);

        uuid.setEditable(false);
        uuid.setText("this_is_the_uuid");

        jLabel5.setText("uuid");

        remove.setText("rem");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(token, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(example, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(permissions, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setToken)
                        .addGap(5, 5, 5)
                        .addComponent(remove))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(save, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addComponent(uuid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                                .addComponent(name, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap()))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(token, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(example, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(remove)
                        .addComponent(setToken)
                        .addComponent(permissions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(uuid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(save))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void setTokenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setTokenActionPerformed
    try {
        //Gather up the new data held in the 4 fields
        JSONObject newData = new JSONObject();
        newData.put("token", token.getText());
        newData.put("permissions", permissions.getText());
        newData.put("example", example.getText());
        newData.put("type", type.getText());

        updateToken(newData);
        update();
    } catch(Exception err) {
        err.printStackTrace();
    }
}//GEN-LAST:event_setTokenActionPerformed

private void inputArgumentsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_inputArgumentsListValueChanged
    System.out.println("inputArgumentsListValueChanged");
    updateTokenDisplay();
}//GEN-LAST:event_inputArgumentsListValueChanged

private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        try {
            View view = (View) Collector.get().getDatum(viewId);
            System.out.println(view.toJSON());
        
            //Gather up the various fields
            data.put("onUpdateScript", onUpdate.getText());
            data.put("graphicsScript", htmlArea.getText());
            data.put("name", name.getText());
            data.put("description", description.getText());
            
            //Save it
            //view.set(data, Person.getAdmin(), null);
        } catch (JSONException ex) {
            Logger.getLogger(ViewEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_saveActionPerformed

private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        try {
            JSONArray inputArgs = data.getJSONArray("inputArguments");
            if(this.selectedIndex < inputArgs.length()) {
                //inputArgs.remove(this.selectedIndex);
            }
        } catch (JSONException ex) {
            Logger.getLogger(ViewEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
        update();
}//GEN-LAST:event_removeActionPerformed


    void updateToken(JSONObject newData) throws Exception  {
        JSONArray inputArgs = data.getJSONArray("inputArguments");
        if(this.selectedIndex < inputArgs.length()) {
            //inputArgs.remove(this.selectedIndex);
        }
        inputArgs.put(this.selectedIndex, newData); //Replace a given index with this new data
    }
    
    void addToken(JSONObject newData) throws Exception {
        JSONArray inputArgs = data.getJSONArray("inputArguments");
        inputArgs.put(newData);
    }
    
    private void update() {
        try {
            htmlArea.setText(data.getString("graphicsScript"));
            onShow.setText(data.getString("onShowScript"));
            onUpdate.setText(data.getString("onUpdateScript"));
            htmlViewer.setText("<html>" + data.getString("graphicsScript") + "</html>");
            
            JSONArray inputArgs = data.getJSONArray("inputArguments");
            String[] tokens = new String[inputArgs.length()+1];
            for(int i=0; i<inputArgs.length(); i++) {
                JSONObject obj = inputArgs.getJSONObject(i);
                String token = obj.getString("token") ;
                tokens[i] = token;
            }
            tokens[inputArgs.length()] = "(new token)";
            
            inputArgumentsList.setListData(tokens);
            name.setText(data.getString("name"));
            description.setText(data.getString("description"));
            uuid.setText(data.getString("id"));
            
            token.setText("........");
            permissions.setText("..");
            example.setText(".........................");
            type.setText("........");
        } catch(Exception err) {
            err.printStackTrace();
        }
        
        validate();
        repaint();
    }
    
    private void updateTokenDisplay() {
        try {
            this.selectedIndex = inputArgumentsList.getSelectedIndex();
            JSONArray inputArgs = data.getJSONArray("inputArguments");
            if(this.selectedIndex < 0) {
                return;
            }
            if(this.selectedIndex == inputArgs.length()) {
                token.setText("");
                permissions.setText("");
                example.setText("");
                type.setText("");
                return;
            }
            JSONObject obj = inputArgs.getJSONObject(this.selectedIndex);
            token.setText(obj.getString("token"));
            permissions.setText("" + obj.getInt("permissions"));
            example.setText(obj.getString("example"));
            type.setText(obj.getString("type"));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                View view = (View) Collector.get().getDatum("CT-sample-view");
//                new ViewEditor(view).setVisible(true);
                newView();
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea description;
    private javax.swing.JTextField example;
    private javax.swing.JTextArea htmlArea;
    private javax.swing.JEditorPane htmlViewer;
    private javax.swing.JList inputArgumentsList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField name;
    private javax.swing.JTextArea onShow;
    private javax.swing.JTextArea onUpdate;
    private javax.swing.JTextField permissions;
    private javax.swing.JButton remove;
    private javax.swing.JButton save;
    private javax.swing.JToggleButton setToken;
    private javax.swing.JTextField token;
    private javax.swing.JTextField type;
    private javax.swing.JTextField uuid;
    // End of variables declaration//GEN-END:variables
    private final JSONObject data;
    private final String viewId;
    
    //Fields to manage 
    private int selectedIndex = 0;
}
