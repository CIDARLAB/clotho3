{
    "name" : "Construction File Demo",
    "id" : "ee2f87dec2e6d9c71a57aa11",
    "schema" : "ConstructionFile",
    "description" : "The Construction File automates the process of building custom DNAs. 'steps' are sequential functions that will be run. The 'dictionary' is a hash of variables that will be used throughout the reaction. Each function will return it's normal return, which will be assigned to the 'output' field and added to the 'dictionary' for the next 'step'. 'Output' should be a single string, which will match the return signature of the function run. Each step will use angular's $parse for each input (e.g. if previous step returns an object or array 'fragments', you could enter as input for the next step 'fragments.key' or 'fragments[0]' respectively). Final result should be called 'final'.",
    "dictionary" : {
        "primer1" : "tatcgatcgta",
        "primer2" : "gatcgatcgat",
        "template" : "ccccccccccccccccccccCGTCTCccccccagctacgatcgataaaaaaaaatttttttttttgatcgatcgatagctaggGAATTCgggggggggggggggggggggggggggggg",
        "EcoRI" : {
            "Clotho" : true,
            "value" : "Digest.enzymes.EcoRI"
        },
        "BsmbI" : {
            "Clotho" : true,
            "value" : "Digest.enzymes.BsmbI"
        },
        "backbone" : "^cccc_atcgatcgatcgactagctacgacgatcgatcgatcgatcgatcgatcgatcgatcagcatcgactagctacgactgc^aatt_"
    },
    "steps" : [
        {
            "reaction" : "PCR.predict",
            "inputs" : ["template", ["primer1", "primer2"]],
            "output" : "pcr_product"
        },
        {
            "reaction" : "Digest.digest",
            "inputs" : ["pcr_product", "EcoRI"],
            "output" : "fragments"
        },
        {
            "reaction" : "Digest.gelPurify",
            "inputs" : ["fragments", "70"],
            "output" : "targetFrag"
        },
        {
            "reaction" : "Digest.digest",
            "inputs" : ["targetFrag", "BsmbI"],
            "output" : "fragments2"
        },
        {
            "reaction" : "Digest.gelPurify",
            "inputs" : ["fragments2", "70"],
            "output" : "targetFrag2"
        },
        {
            "reaction" : "PCR.ligate",
            "inputs" : [["targetFrag2", "backbone"]],
            "output" : "final"
        }
    ]
}