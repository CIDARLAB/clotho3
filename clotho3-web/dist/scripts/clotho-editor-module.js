angular.module("clotho.editor",["clotho.foundation","clotho.interface"]),angular.module("clotho.editor").directive("clothoEditor",["Clotho","$compile","$parse","$http","$templateCache","$filter","$q",function(a,b,c,d,e,f,g){return{restrict:"A",require:["ngModel","^form"],scope:{inputSharable:"=ngModel",editMode:"=?"},controller:["$scope","$element","$attrs",function(c,f,h){return h.$set("novalidate","novalidate"),angular.isString(h.name)||h.$set("name","sharableEditor"),c.editMode=!!c.editMode,c.showJsonEditor=!1,c.logScope=function(){console.log(c)},c.schema={},c._objBaseFields="views/_editor/_baseFields.html",c._formActions="views/_editor/_formActions.html",c.processInputSharable=function(b){c.sharable={},console.log(b),angular.isObject(b)&&!angular.isEmpty(b)?(console.log("sharable object passed"),c.id=b.id,c.sharable=b):angular.isString(b)?(console.log("passed a string, assuming a valid ID: "+b),c.id=b):(console.log("sharable must be an object or a string, you passed: ",b),c.id="",c.sharable={});var d=angular.isEmpty(c.sharable)&&""!=c.id?a.get(c.id):g.when(c.sharable);d.then(function(a){c.sharable=a,c.type=c.determineType(a),c.getPartialAndCompile(c.type,a)})},c.processInputSharable(c.inputSharable),c.determineType=function(a){function b(a,b){return-1!==a.indexOf(b,a.length-b.length)}if(angular.isUndefined(a)||angular.isEmpty(a)||angular.isUndefined(a.schema))return"undefined";var c=angular.lowercase(a.schema);return console.log(a,a.schema,c),b(c,"schema")?"schema":b(c,"function")?"function":"sharable"},c.getPartialAndCompile=function(a){switch(c.editMode=!1,angular.lowercase(a)){case"function":d.get("views/_editor/function.html",{cache:e}).success(function(a){var d=b(a)(c);f.html(d)});break;case"schema":d.get("views/_editor/schema.html",{cache:e}).success(function(a){var d=b(a)(c);f.html(d)});break;case"sharable":d.get("views/_editor/sharable.html",{cache:e}).then(function(a){var d=b(a.data)(c);f.html(d)});break;default:console.log("unknown type"),f.html('<p class="text-center">Please select an Object</p>')}},{removeField:function(a){console.log("removing key "+a),delete c.sharable[a]}}}],compile:function(){return{pre:function(){},post:function(b,c,d,e){b.formCtrl=e[1],b.edit=function(){b.editMode=!0},b.toggleJsonEdit=function(){b.showJsonEditor=!b.showJsonEditor},b.reset=function(){b.formCtrl.$setPristine(),a.get(b.id).then(function(a){b.sharable=a})},b.save=function(){a.set(b.sharable),b.editMode=!1},b.discard=function(){b.reset(),b.editMode=!1},b.destroy=function(){a.destroy(b.sharable.id).then(function(){b.editMode=!1,b.sharable=null,b.id=null,b.processInputSharable({})})},a.listen("collector_reset",function(){b.processInputSharable()},b),a.watch(b.id,b.sharable,b),b.$watch("inputSharable",function(a){b.processInputSharable(a)})}}}}}]),angular.module("clotho.editor").directive("formField",["$compile",function(a){var b='<div class="form-group" ng-form ng-transclude></div>';return{restrict:"E",template:b,replace:!0,transclude:!0,require:["^form","^?clothoEditor"],controller:["$scope","$element","$attrs",function(){}],link:function(b,c,d,e){var f=e[0],g=e[1],h=d.name,i=d.help,j=d.removableField,k=c.children();if(1!==k.length)throw"You must include the form input element as the single child of this directive, instead got "+c.html()+"generating:";var l=k.attr("id"),m=(k.prop("tagName"),k.attr("type")),n=/checkbox|radio/gi,o=/file|checkbox|radio/gi;l||(l="input"+Math.floor(1e7*Math.random()).toString(),k.attr("id",l)),o.test(m)||k.addClass("form-control");var p=angular.element('<label class="control-label" for="'+l+'">'+("radio"===m?k.val():h)+"</label>");if(n.test(m)){p.prepend(k);var q=angular.element('<div class="'+m+'"></div>');c.append(q)}if(b.removeField=angular.isDefined(g)?g.removeField:angular.noop,j){var q=angular.element('<div class="input-group"></div>'),r=angular.element('<span class="input-group-btn"><button class="btn btn-danger" type="button" ng-click="removeField(\''+j+'\')"><span class="glyphicon glyphicon-trash"></span></button></span>');a(r)(b),q.prepend(c.contents()),q.append(r),c.append(q)}h&&c.prepend(p),i&&c.append('<p class="help-block">'+i+"</p>"),b.$watch(function(){return f.$invalid},function(a){c.toggleClass("has-error",a)})}}}]),angular.module("clotho.editor").directive("formFieldEnumeration",["Clotho","ClothoUtils","$q","$compile",function(a,b,c,d){function e(a){var b="";return angular.forEach(a,function(a){var c=a.type||"text";"?"==c&&"text"==a.type;var d,e=a.required?"required":"",f='<form-field name="'+a.name+'" removable-field="'+a.name+'">',g="</form-field>";switch(c){case"textarea":d='<textarea rows="2" '+e+' ng-model="sharable.'+a.name+'"></textarea>';break;case"select":var h="";angular.forEach(a.options,function(a){h=h+'<option value="'+a+'">'+a+"</option>"}),d="<select "+e+' ng-model="sharable.'+a.name+'">'+h+"</select>";break;case"sharable":default:d='<input type="'+c+'" '+e+'ng-model="sharable.'+a.name+'" >'}b+=f+d+g}),b}return{restrict:"A",scope:{fields:"=?",schema:"=?",sharable:"=?"},controller:["$scope","$element","$attrs",function(a,b){a.generateFields=function(c){var f=c.fields||a.fields||[],g=c.schema||a.schema||{fields:[]},h=c.sharable||a.sharable||{schema:{fields:[]}};console.log(f,g,h);var i=f.concat(g.fields);_.forEach(h,function(a,b){i.push({name:b})}),console.log(_.pluck(i,"name"));var j=_.uniq(i,function(a){return a.name});b.html(e(j)),d(b.contents())(a)}}],link:function(c,d){function e(a){return b.downloadSchemaDependencies(a).then(function(a){c.generateFields({schema:a})})}return angular.isUndefined(c.fields)&&angular.isUndefined(c.schema)&&angular.isUndefined(c.sharable)?void d.html("no information passed"):(c.$watch("fields",function(a){a&&(console.log("updating fields"),c.generateFields({fields:a}))},!0),c.$watch("schema",function(a){a&&a.fields&&a.fields.length&&(console.log("updating schema"),e(a))},!0),void c.$watch(function(){return _.keys(c.sharable)},function(){c.sharable&&(console.log("updating sharable"),a.get(c.sharable.schema).then(function(a){e(a)}))},!0))}}}]),angular.module("clotho.editor").directive("jsonEdit",function(){return{restrict:"A",require:"ngModel",scope:{model:"=ngModel"},link:function(a,b,c,d){function e(a){try{return angular.fromJson(a)}catch(b){return d.$setValidity("json",!1),a}}function f(a){return angular.toJson(a,!0)}function g(a){var b=!0;try{angular.fromJson(a)}catch(c){b=!1}return console.log(b),console.log(d),b}d.$parsers.push(e),d.$formatters.push(f),a.$watch("model",function(a,b){a!=b&&g(a)&&(d.$setValidity("json",!0),d.$setViewValue(f(a)),d.$render())},!0)}}}),angular.module("clotho.editor").controller("Editor_SharableCtrl",["$scope",function(a){a.addNewField=function(){a.newFieldKey&&a.newFieldVal&&(a.sharable[a.newFieldKey]=a.newFieldVal,a.newFieldKey=null,a.newFieldVal=null)}}]),angular.module("clotho.editor").controller("Editor_FunctionCtrl",["$scope","Clotho","$filter",function(a,b,c){a.langTypes=[{name:"JavaScript",value:"JAVASCRIPT"},{name:"Java",value:"JAVA"},{name:"Python",value:"PYTHON"},{name:"Groovy",value:"GROOVY"}],a.outputTypes=[{name:"Value",value:"VALUE"},{name:"Reference",value:"REFERENCE"}],a.simpleTypes={object:!0,string:!0,number:!0,"boolean":!0,array:!0},a.paramTypes=[{name:"object",type:"object",category:"Primitive",javaType:"java.util.HashMap",reference:!1},{name:"array",type:"array",category:"Primitive",javaType:"java.util.Arrays",reference:!1},{name:"string",type:"string",category:"Primitive",javaType:"java.lang.String",reference:!1},{name:"number",type:"number",category:"Primitive",javaType:"java.lang.Long",reference:!1},{name:"boolean",type:"boolean",category:"Primitive",javaType:"java.lang.Boolean",reference:!1}],b.query({schema:"Schema"}).then(function(b){angular.forEach(b,function(b){a.paramTypes.push(angular.extend(b,{category:"Schema"}))})}),a.clothoFunctions=[],b.query({schema:"Function"}).then(function(b){a.clothoFunctions=b}),a.addArg=function(){angular.isEmpty(a.sharable.args)&&(a.sharable.args=[]),a.sharable.args.push({type:"",name:""})},a.addDep=function(){angular.isEmpty(a.sharable.dependencies)&&(a.sharable.dependencies=[]),a.sharable.dependencies.push("")},a.addTest=function(){angular.isEmpty(a.sharable.tests)&&(a.sharable.tests=[]),a.sharable.tests.push({args:[],output:{value:"",type:""}})},a.testResults={},a.singleTest=function(c){var d={};d.id=a.sharable.id,d.args=angular.isEmpty(a.sharable.tests)?[]:a.sharable.tests[c].args,b.run(d.id,d.args).then(function(b){console.log(b,a.sharable.tests[c].output.value,b==a.sharable.tests[c].output.value),a.testResults[c]=b==a.sharable.tests[c].output.value})},a.runAllTests=function(){for(var b=0;b<a.sharable.tests.length;b++)a.singleTest(b)},a.resetTests=function(){a.testResults={}},a.querySchemaWrapper=function(a){return b.query({schema:a}).then(function(a){return c("limitTo")(a,10)})},a.testPopoverText=function(b){var d=a.sharable.tests[b].args;return d?c("json")(d):"Search for an object of type {{ param.type }}"},a.save=function(){a.resetTests(),a.$parent.save()},a.$watch("editMode",function(b){a.codemirrorEditorOptions.readOnly=b?!1:"nocursor"}),a.codemirrorEditorOptions={lineWrapping:!0,lineNumbers:!0,onLoad:function(b){a.$watch("sharable.language",function(){var c=a.sharable.language.toLowerCase();c="java"==c?"text/x-java":c,b.setOption("mode",c)}),b.on("beforeChange",function(){}),b.on("change",function(){a.resetTests()})}},a.resetTests()}]),angular.module("clotho.editor").controller("Editor_SchemaCtrl",["$scope","Clotho",function(a,b){a.schemas=[],b.query({schema:"Schema"}).then(function(b){a.schemas=b}),a.clothoFunctions=[],b.query({schema:"Function"}).then(function(b){a.clothoFunctions=b}),a.accessTypes=[{name:"Public",value:"PUBLIC"},{name:"Private",value:"PRIVATE"},{name:"Read Only",value:"READONLY"}],a.constraintTypes=[{name:"RegExp",value:"regex"},{name:"Not Null",value:"notnull"}],a.primitiveToJava={string:"java.lang.String",number:"java.lang.Long","boolean":"java.lang.Boolean",object:"java.util.HashMap",array:"java.util.List"},a.findSpacesRegExp=/\s/gi,a.parseField=function(b){a.simpleTypes[b.type]?(b.javaType=a.primitiveToJava[b.type],b.reference=!1):b.reference=!0},a.$watch("sharable.superClass",function(){a.getSuperClass()}),a.getSuperClass=function(){a.sharable.superClass&&b.get(a.sharable.superClass).then(function(b){a.superClassObj=b})},a.newMethod=function(){return""},a.addMethod=function(b){angular.isEmpty(a.sharable.methods)&&(a.sharable.methods=[]),a.sharable.methods.push(b)},a.addNewMethod=function(){angular.isEmpty(a.newMethodObj)||(a.addMethod(a.newMethodObj),a.newMethodObj=a.newMethod())},a.determineMethodName=function(b){return _.find(a.clothoFunctions,{id:b}).name},a.newField=function(){return{name:"",type:"",description:"",example:"",constraints:null,access:"PUBLIC"}},a.addField=function(){angular.isEmpty(a.sharable.fields)&&(a.sharable.fields=[]),a.sharable.fields.push(a.newField())},a.newConstraint=function(){return{type:"",value:""}},a.addConstraint=function(b){angular.isEmpty(a.sharable.fields[b].constraints)&&(a.sharable.fields[b].constraints=[]),a.sharable.fields[b].constraints.push(a.newConstraint())},a.save=function(){angular.forEach(a.sharable.fields,function(a){if(console.log(a),a.constraints){var b=a.constraints;a.constraints={},angular.forEach(b,function(b){a.constraints[b.type]=b.value})}else a.constraints=null}),console.log(a.sharable),a.$parent.save()}}]);