angular.module("clotho.editor",["clotho.foundation","clotho.interface"]),angular.module("clotho.editor").directive("clothoEditor",["Clotho","$compile","$parse","$http","$templateCache","$filter","$q",function(a,b,c,d,e,f,g){return{restrict:"A",require:"^form",scope:{uuid:"=",editable:"=?"},controller:["$scope","$element","$attrs",function(c,f,h){function i(){var a="";return angular.forEach(c.schema.fields,function(b){var c=b.type||"text";"?"==c&&"text"==b.type;var d,e=b.required?"required='required'":"",f='<div class="control-group"><label class="control-label" for="'+b.name+'">'+b.name+'</label><div class="controls">',g="</div></div>";switch(c){case"textarea":d='<textarea class="input-large" id="'+b.name+'" name="'+b.name+'" '+e+' ng-model="editable.'+b.name+'" ng-disabled="!editMode"></textarea>';break;case"select":var h="";angular.forEach(b.options,function(a){h=h+'<option value="'+a+'">'+a+"</option>"}),d='<select id="'+b.name+'" name="'+b.name+'" '+e+' ng-disabled="!editMode" ng-model="editable.'+b.name+'">'+h+"</select>";break;case"sharable":default:d='<input type="'+c+'" class="input-large" id="'+b.name+'" name="'+b.name+'" '+e+' ng-disabled="!editMode" ng-model="editable.'+b.name+'" >'}a+=f+d+g}),a}console.log(c.editable),c.schema={},c.editMode=!1,c.formDirty=!1,c.logScope=function(){console.log(c)},angular.isDefined(c.editable)&&angular.isObject(c.editable)?(console.log("editable passed"),c.uuid=c.editable.id):"undefined"==typeof c.uuid&&(console.log("id ["+c.uuid+"] not in controller, pulling"),c.uuid=h.uuid),a.listen("collector_reset",function(){a.get(c.uuid).then(function(a){c.editable=a})},c),a.watch2(c.uuid,c,"editable",c),c.compileEditor=function(){var b="id"==c.uuid?g.when():a.get(c.uuid);b.then(function(a){c.editable=a,c.type=c.determineType(a),c.getPartialAndCompile(c.type,a)})},c.determineType=function(a){function b(a,b){return-1!==a.indexOf(b,a.length-b.length)}if(angular.isUndefined(a)||angular.isEmpty(a))return"undefined";var c=angular.lowercase(a.schema);return b(c,"schema")?"schema":b(c,"function")?"function":"sharable"},c.getPartialAndCompile=function(h,j){switch(c.editMode=!1,angular.lowercase(h)){case"sharable":d.get("views/_editor/sharable.html",{cache:e}).then(function(a){var d=b(a.data)(c);f.html(d)}).then(function(){c.schemaName=j.schema,a.get(c.schemaName).then(function(a){c.schema=a,c.schema_custom=a.custom;var d=f.find("insert-fields").html(i(c));b(d.contents())(c)})});break;case"function":d.get("views/_editor/function.html",{cache:e}).success(function(a){var d=b(a)(c);f.html(d)});break;case"schema":var k=c.editable.superClass?a.get(c.editable.superClass).then(function(a){c.superClassObj=a}):g.when(c.superClassObj=null);k.then(function(){d.get("views/_editor/schema.html",{cache:e}).success(function(a){var d=b(a)(c);f.html(d)})});break;default:console.log("unknown type"),f.html('<p class="text-center">Please select an Object</p>')}}}],compile:function(){return{pre:function(a){a.compileEditor()},post:function(b,d,e){b.form=c(e.name)(b),b.edit=function(){b.editMode=!0},b.reset=function(){b.form.$setPristine(),a.get(b.uuid).then(function(a){b.editable=a})},b.save=function(){a.set(b.editable),b.editMode=!1},b.discard=function(){b.reset(),b.editMode=!1},b.destroy=function(){a.destroy(b.editable.id).then(function(){b.editMode=!1,b.editable=null,b.uuid=null,b.compileEditor()})},b.$watch("uuid",function(a,c){a&&a!=c&&b.compileEditor()}),b.$watch("editable",function(a){console.log(a),a&&a.id?b.uuid=a.id:a&&(console.log("object doesnt have id -- assume has type"),b.getPartialAndCompile(b.determineType(a),a))})}}}}}]),angular.module("clotho.editor").controller("Editor_SharableCtrl",function(){}),angular.module("clotho.editor").controller("Editor_FunctionCtrl",["$scope","Clotho","$filter",function(a,b,c){a.langTypes=[{name:"JavaScript",value:"JAVASCRIPT"},{name:"Java",value:"JAVA"},{name:"Python",value:"PYTHON"},{name:"Groovy",value:"GROOVY"}],a.outputTypes=[{name:"Value",value:"VALUE"},{name:"Reference",value:"REFERENCE"}],a.simpleTypes={object:!0,string:!0,number:!0,"boolean":!0,array:!0},a.paramTypes=[{name:"object",type:"object",category:"Primitive",javaType:"java.util.HashMap",reference:!1},{name:"array",type:"array",category:"Primitive",javaType:"java.util.Arrays",reference:!1},{name:"string",type:"string",category:"Primitive",javaType:"java.lang.String",reference:!1},{name:"number",type:"number",category:"Primitive",javaType:"java.lang.Long",reference:!1},{name:"boolean",type:"boolean",category:"Primitive",javaType:"java.lang.Boolean",reference:!1}],b.query({schema:"Schema"}).then(function(b){angular.forEach(b,function(b){a.paramTypes.push(angular.extend(b,{category:"Schema"}))})}),a.clothoFunctions=[],b.query({schema:"Function"}).then(function(b){a.clothoFunctions=b}),a.addArg=function(){angular.isEmpty(a.editable.args)&&(a.editable.args=[]),a.editable.args.push({type:"",name:""})},a.addDep=function(){angular.isEmpty(a.editable.dependencies)&&(a.editable.dependencies=[]),a.editable.dependencies.push("")},a.addTest=function(){angular.isEmpty(a.editable.tests)&&(a.editable.tests=[]),a.editable.tests.push({args:[],output:{value:"",type:""}})},a.testResults={},a.singleTest=function(c){var d={};d.id=a.editable.id,d.args=angular.isEmpty(a.editable.tests)?[]:a.editable.tests[c].args,b.run(d.id,d.args).then(function(b){console.log(b,a.editable.tests[c].output.value,b==a.editable.tests[c].output.value),a.testResults[c]=b==a.editable.tests[c].output.value})},a.runAllTests=function(){for(var b=0;b<a.editable.tests.length;b++)a.singleTest(b)},a.resetTests=function(){a.testResults={}},a.querySchemaWrapper=function(a){return b.query({schema:a}).then(function(a){return c("limitTo")(a,10)})},a.$watch("editMode",function(b){a.codemirrorEditorOptions.readOnly=b?!1:"nocursor"}),a.codemirrorEditorOptions={lineWrapping:!0,lineNumbers:!0,onLoad:function(b){a.$watch("editable.language",function(){var c=a.editable.language.toLowerCase();c="java"==c?"text/x-java":c,b.setOption("mode",c)}),b.on("beforeChange",function(){}),b.on("change",function(){})}},a.resetTests()}]),angular.module("clotho.editor").controller("Editor_SchemaCtrl",["$scope","Clotho",function(a,b){a.schemas=[],b.query({schema:"Schema"}).then(function(b){a.schemas=b}),a.accessTypes=[{name:"Public",value:"PUBLIC"},{name:"Private",value:"PRIVATE"},{name:"Read Only",value:"READONLY"}],a.constraintTypes=[{name:"RegExp",value:"regex"},{name:"Not Null",value:"notnull"}],a.primitiveToJava={string:"java.lang.String",number:"java.lang.Long","boolean":"java.lang.Boolean",object:"java.util.HashMap",array:"java.util.List"},a.findSpacesRegExp=/\s/gi,a.parseField=function(b){a.simpleTypes[b.type]?(b.javaType=a.primitiveToJava[b.type],b.reference=!1):b.reference=!0},a.newMethod=function(){return""},a.addMethod=function(b){angular.isEmpty(a.editable.methods)&&(a.editable.methods=[]),a.editable.methods.push(b)},a.addNewMethod=function(){angular.isEmpty(a.newMethodObj)||(a.addMethod(a.newMethodObj),a.newMethodObj=a.newMethod())},a.newField=function(){return{name:"",type:"",description:"",example:"",constraints:null,access:"PUBLIC"}},a.addField=function(){angular.isEmpty(a.editable.fields)&&(a.editable.fields=[]),a.editable.fields.push(a.newField())},a.newConstraint=function(){return{type:"",value:""}},a.addConstraint=function(b){angular.isEmpty(a.editable.fields[b].constraints)&&(a.editable.fields[b].constraints=[]),a.editable.fields[b].constraints.push(a.newConstraint())},a.saveSchema=function(){angular.forEach(a.editable.fields,function(a){if(console.log(a),a.constraints){var b=a.constraints;a.constraints={},angular.forEach(b,function(b){a.constraints[b.type]=b.value})}else a.constraints=null}),console.log(a.editable),a.save()}}]);